
name: test

on: [ push, pull_request ]

jobs:

  test-ubuntu:

    if: " ! (contains(github.event.head_commit.message, 'skip ci') || contains(github.event.head_commit.message, 'ci skip'))"

    name: ${{matrix.ruby}} on ${{matrix.os}} in ${{matrix.tz}}

    strategy:
      matrix:
        os: [ ubuntu-latest ]
        ruby: [ '1.9', '2.1', '2.3', '2.5', '2.6', '2.7', jruby-9.2 ]
        experimental: [ false ]
        tz: [ '', 'UTC', 'Asia/Tokyo', 'America/Chicago' ]
      fail-fast: false
    runs-on: ${{matrix.os}}
    continue-on-error: ${{matrix.experimental}}

    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{matrix.ruby}}
          bundler-cache: true
      - run: ruby --version
      - run: gem --version
      - run: bundle --version
      - run: bundle install
      - run: bundle exec rspec --force-color --format documentation
        env:
          TZ: ${{matrix.tz}}

  test-windows:

    if: " ! (contains(github.event.head_commit.message, 'skip ci') || contains(github.event.head_commit.message, 'ci skip'))"

    name: ${{matrix.ruby}} on ${{matrix.os}} in ${{matrix.tz}}

    strategy:
      matrix:
        os: [ windows-2019 ]
        ruby: [ '2.5', '2.6', '2.7', jruby-9.2 ]
        experimental: [ false ]
        tz: [ 'UTC', 'Tokyo Standard Time', 'Eastern Standard Time' ]
      fail-fast: false
    runs-on: ${{matrix.os}}
    continue-on-error: ${{matrix.experimental}}

    env:
      TZONE: ${{matrix.tz}}
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{matrix.ruby}}
          bundler-cache: false
      - run: tzutil /s "%TZONE%"
        shell: cmd
      - run: echo %date% %time%; tzutil /g
        shell: cmd
      - run: ruby --version
      - run: gem --version
      - run: bundle --version
      - run: cp Gemfile.windows Gemfile
      - run: bundle install
      - run: ruby -e "n = Time.now; p [ ENV['TZ'], n, n.zone ]"
      - run: bundle exec ruby -e "require 'et-orbi'; p EtOrbi.determine_local_tzone"
      - run: bundle exec rspec --force-color --format documentation

